name: SundialKit
on:
  push:
    branches-ignore:
      - '*WIP'
jobs:
  build-ubuntu:
    name: Build on Ubuntu
    env:
      PACKAGE_NAME: Spinetail
      SWIFT_VER: ${{ matrix.swift-version }}
    runs-on: ${{ matrix.runs-on }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix:
        runs-on: [ubuntu-18.04, ubuntu-20.04]
        swift-version: [5.5.2, 5.6.2, 5.7]
        include:
          - runs-on: ubuntu-22.04
            swift-version: 5.7
    steps:
      - uses: actions/checkout@v2
      - name: Set Ubuntu Release DOT
        run: echo "RELEASE_DOT=$(lsb_release -sr)" >> $GITHUB_ENV
      - name: Set Ubuntu Release NUM
        run: echo "RELEASE_NUM=${RELEASE_DOT//[-._]/}"  >> $GITHUB_ENV
      - name: Set Ubuntu Codename
        run: echo "RELEASE_NAME=$(lsb_release -sc)"  >> $GITHUB_ENV
      - name: Download Swift
        run: curl -O https://download.swift.org/swift-${SWIFT_VER}-release/ubuntu${RELEASE_NUM}/swift-${SWIFT_VER}-RELEASE/swift-${SWIFT_VER}-RELEASE-ubuntu${RELEASE_DOT}.tar.gz
      - name: Extract Swift
        run: tar xzf swift-${SWIFT_VER}-RELEASE-ubuntu${RELEASE_DOT}.tar.gz
      - name: Add Path
        run: echo "$GITHUB_WORKSPACE/swift-${SWIFT_VER}-RELEASE-ubuntu${RELEASE_DOT}/usr/bin" >> $GITHUB_PATH
      - name: Build
        run: swift build
      - name: Run tests
        run: swift test --enable-test-discovery --enable-code-coverage
      - uses: sersoft-gmbh/swift-coverage-action@v2
      - name: Upload SPM coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          flags: spm,${{ env.RELEASE_NAME }},${{ env.SWIFT_VER }}
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
  build-macos:
    name: Build on macOS
    env:
      PACKAGE_NAME: SundialKit
    runs-on: ${{ matrix.runs-on }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      matrix:
        include:
          - runs-on: macos-11
            xcode: "/Applications/Xcode_13.2.1.app"
            iOSVersion: 15.2
            watchOSVersion: 8.3
            watchName: "Apple Watch Series 7 - 41mm"  
          - runs-on: macos-12
            xcode: "/Applications/Xcode_13.3.app"
            iOSVersion: 15.4
            watchOSVersion: 8.5
            watchName: "Apple Watch Series 7 - 41mm"
          - runs-on: macos-12
            xcode: "/Applications/Xcode_13.4.1.app"
            iOSVersion: 15.5
            watchOSVersion: 8.5  
            watchName: "Apple Watch Series 7 - 41mm"
          - runs-on: macos-12
            xcode: "/Applications/Xcode_14.0.1.app"
            iOSVersion: "16.0"
            watchOSVersion: "9.0"
            watchName: "Apple Watch Series 8 (41mm)"
          - runs-on: macos-12
            xcode: "/Applications/Xcode_14.1.app"
            iOSVersion: "16.1"
            watchOSVersion: "9.1"
            watchName: "Apple Watch Ultra (49mm)"
    steps:
      - uses: actions/checkout@v2
      - name: Set Xcode Name
        run: echo "XCODE_NAME=$(basename -- ${{ matrix.xcode }} | sed 's/\.[^.]*$//' | cut -d'_' -f2)" >> $GITHUB_ENV
      - name: Setup Xcode
        run: sudo xcode-select -s ${{ matrix.xcode }}/Contents/Developer
      - name: Build
        run: swift build
      - name: Run Swift Package tests
        run: swift test -v --enable-code-coverage
      - uses: sersoft-gmbh/swift-coverage-action@v2
      - name: Upload SPM coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          flags: spm
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Clean up spm build directory
        run: rm -rf .build
      - name: Lint
        if: startsWith(github.ref, 'refs/tags/') != true
        run: swift run swiftformat --lint . && swift run swiftlint
      - name: Dump PIF
        run: |
          swift package dump-pif > /dev/null
          xcodebuild clean -scheme SundialKit -destination 'generic/platform=iOS' > /dev/null
        if: matrix.xcode == '/Applications/Xcode_14.1.app'
      - name: Run iOS target tests
        run: xcodebuild test -scheme SundialKit -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 13,OS=${{ matrix.iOSVersion }}' -enableCodeCoverage YES build test
      - uses: sersoft-gmbh/swift-coverage-action@v2
      - name: Upload iOS coverage to Codecov
        uses: codecov/codecov-action@v2        
        with:
          fail_ci_if_error: true
          flags: iOS,iOS-${{ matrix.iOSVersion }}
          verbose: true        
          token: ${{ secrets.CODECOV_TOKEN }}          
      - name: Run watchOS target tests
        run: xcodebuild test -scheme SundialKit -sdk watchsimulator -destination 'platform=watchOS Simulator,name=${{ matrix.watchName }},OS=${{ matrix.watchOSVersion }}' -enableCodeCoverage YES build test
      - uses: sersoft-gmbh/swift-coverage-action@v2
      - name: Upload watchOS coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          flags: watchOS,watchOS${{ matrix.watchOSVersion }}
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
